{"version":3,"sources":["components/SnackBarWrapper.js","components/SnackBar.js","components/styles.js","components/Login.js","components/Home.js","components/TransactionDetails.js","components/ViewPassBook.js","components/CurrentMonthDetails.js","App.js","serviceWorker.js","index.js"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","SnackBarWrapper","props","classes","useStyles1","className","message","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","id","icon","iconVariant","action","IconButton","key","aria-label","color","onClick","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","fontSize","opacity","marginRight","spacing","display","alignItems","SnackBar","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","type","prototypes","PropTypes","string","func","styles","body","paper","marginTop","flexDirection","form","width","submit","margin","close","padding","appBar","position","layout","marginLeft","breakpoints","up","stepper","submits","papers","marginBottom","passbooklayout","passbooksubmit","card","minWidth","title","Login","snackClose","setState","msgOpen","state","username","password","errors","snackMsg","snackType","handleLogin","bind","handleInputData","target","value","name","this","history","push","pathname","preventDefault","Container","component","maxWidth","style","CssBaseline","Typography","paddingTop","onSubmit","handleSubmit","TextField","required","fullWidth","label","autoComplete","onChange","Button","Component","withStyles","Home","handleTransaction","handlePassbook","handleMonthlyDetails","Fragment","AppBar","Toolbar","noWrap","currentMonth","Date","getMonth","TransactionDetails","arr","income","expense","amount","description","date","selectedValue","netAmount","totalIncome","totalExpense","handleOnChange","handleDate","handlepassbook","resetForm","localStorage","getItem","JSON","parse","test","balance","parseFloat","amt","month","obj","toLocaleDateString","setItem","stringify","Paper","align","Grid","container","item","xs","FormControl","formControl","FormLabel","RadioGroup","flex","FormControlLabel","control","Radio","utils","DateFnsUtils","naame","format","KeyboardButtonProps","textAlign","ViewPassBook","datas","handleClear","handleAddTransaction","handleBackToHome","map","index","console","log","clear","Table","table","TableHead","TableRow","StyledTableCell","TableBody","StyledTableRow","head","common","white","TableCell","root","CurrentMonthDetails","netIncome","netExpense","netincome","netexpense","arr1","i","parseInt","arr2","j","Card","CardContent","gutterBottom","App","basename","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.056db1aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\n\r\nexport default function SnackBarWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nSnackBarWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n      backgroundColor: green[600],\r\n    },\r\n    error: {\r\n      backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n      backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n      fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n      opacity: 0.9,\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n  }));\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackBarWrapper from './SnackBarWrapper'\r\n\r\n\r\nexport default function SnackBar(props) {\r\n\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        props.onClose(false)\r\n    }\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n            }}\r\n            open={props.open}\r\n            autoHideDuration={3000}\r\n            onClose={handleClose}\r\n        >\r\n            <SnackBarWrapper\r\n                onClose={handleClose}\r\n                variant={props.type}\r\n                message={props.message}\r\n            />\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nSnackBar.prototypes = {\r\n    type: PropTypes.string,\r\n    open: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose:PropTypes.func\r\n}\r\n","\r\n\r\nconst styles = (theme) => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: '#50d07d',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(16),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    close: {\r\n        padding: theme.spacing(0.5),\r\n      },\r\n    appBar: {\r\n        position: 'absolute',\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    submits: {\r\n        margin: theme.spacing(3, 3, 3),\r\n        width: \"40%\",\r\n    },\r\n    papers: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    passbooklayout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: \"90%\",\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    passbooksubmit: {\r\n        margin: theme.spacing(3, 2, 2),\r\n        width: '40%'\r\n    },\r\n    card: {\r\n        minWidth: 275,\r\n        marginRight: '5px',\r\n        marginTop: '10px'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n\r\n});\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport { Button, CssBaseline, TextField, Typography, Container } from '@material-ui/core';\r\nimport SnackBar from './SnackBar';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from './styles';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      msgOpen: false,\r\n      snackMsg: \"\",\r\n      snackType: \"\"\r\n    }\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleInputData = this.handleInputData.bind(this);\r\n  }\r\n\r\n// setting the values of when user enters the details\r\n  handleInputData(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({ \r\n      [name]: value\r\n     })\r\n  }\r\n\r\n\r\n//login button\r\n  handleLogin(event) {\r\n    if (this.state.username === \"deven733\" && this.state.password === \"12345678\") {\r\n      this.props.history.push({\r\n        pathname: \"/home\",\r\n      })\r\n    } else if (this.state.username === '') {\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'error',\r\n        snackMsg: 'Please Enter Your Username!'\r\n      })\r\n    } else if(this.state.password === ''){\r\n      this.setState({\r\n        msgOpen:true,\r\n        snackType:'error',\r\n        snackMsg:'Please Enter Your Password!'\r\n      })\r\n    }\r\n    else{\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'error',\r\n        snackMsg: 'Wrong Credentials! Please check your username/password!'\r\n      })\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n//handling close button of snackbar, resetting its initital state to false\r\n  snackClose = () => {\r\n    this.setState({\r\n      msgOpen: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\" style={{ backgroundColor: 'white' }}>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\" style={{ paddingTop: 10 }}>\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Enter Your Username\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleInputData}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Enter Your Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={this.state.password}\r\n              onChange={this.handleInputData}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={this.handleLogin}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <SnackBar\r\n          type={this.state.snackType}\r\n          open={this.state.msgOpen}\r\n          message={this.state.snackMsg}\r\n          onClose={() => this.snackClose()}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Login);\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {Button,CssBaseline,Typography,Container,AppBar,Toolbar} from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from './styles';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleTransaction = this.handleTransaction.bind(this);\r\n        this.handlePassbook = this.handlePassbook.bind(this);\r\n        this.handleMonthlyDetails = this.handleMonthlyDetails.bind(this);\r\n    }\r\n\r\n    handleTransaction() {\r\n        this.props.history.push({\r\n            pathname: \"/transaction_details\",\r\n        })\r\n    }\r\n\r\n    handlePassbook() {\r\n        this.props.history.push({\r\n            pathname: \"/passbook\",\r\n        })\r\n    }\r\n\r\n    handleMonthlyDetails() {\r\n        this.props.history.push({\r\n            pathname: \"/monthly_details\",\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <div className='titlebar-container'>\r\n                            <Typography variant=\"h6\" noWrap>Home</Typography>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Container component=\"main\" maxWidth=\"xs\" style={{ backgroundColor: 'white' }}>\r\n                    <div className={classes.paper}>\r\n                        <Typography component=\"h1\" variant=\"h5\" style={{ paddingTop: 10 }}>\r\n                            Finance Manager\r\n                        </Typography>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handleTransaction}\r\n                        >\r\n                            ADD TRANSACTION\r\n                        </Button>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handlePassbook}\r\n                        >\r\n                            VIEW PASSBOOK\r\n                        </Button>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handleMonthlyDetails}\r\n                        >\r\n                            CURRENT MONTH DETAILS\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Home);","import React, { Component } from 'react';\r\nimport { Button, CssBaseline, Typography, AppBar, Toolbar, Paper, Grid, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport 'date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport './style/listcell.css'\r\nimport styles from './styles';\r\nimport SnackBar from './SnackBar';\r\n\r\nvar dt = new Date();\r\nvar currentMonth = dt.getMonth() + 1;\r\n\r\nclass TransactionDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      arr: [],\r\n      income: '',\r\n      expense: '',\r\n      amount: '',\r\n      description: '',\r\n      date: new Date(),\r\n      selectedValue: 'income',\r\n      netAmount: 0,\r\n      totalIncome: [],\r\n      totalExpense: [],\r\n      msgOpen: false,\r\n      snackMsg: \"\",\r\n      snackType: \"\"\r\n    }\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n    this.handleDate = this.handleDate.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handlepassbook = this.handlepassbook.bind(this);\r\n    this.handleMonthlyDetails = this.handleMonthlyDetails.bind(this);\r\n    this.resetForm = this.resetForm.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    localStorage.getItem('data') && this.setState({\r\n      arr: JSON.parse(localStorage.getItem('data')),\r\n    })\r\n\r\n    localStorage.getItem('totalIncome') && this.setState({\r\n      totalIncome: JSON.parse(localStorage.getItem('totalIncome')),\r\n    })\r\n\r\n    localStorage.getItem('totalExpense') && this.setState({\r\n      totalExpense: JSON.parse(localStorage.getItem('totalExpense')),\r\n    })\r\n\r\n    localStorage.getItem('totalAmount') && this.setState({\r\n      netAmount: JSON.parse(localStorage.getItem('totalAmount')),\r\n    })\r\n  }\r\n\r\n  ///////// handling the input details //////////\r\n\r\n  handleOnChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    if (name === 'amount') {\r\n      const regexOnlyNumbers = /^[0-9]+(\\.[0-9]{1,2})?$/;\r\n      if (event.target.value === '' || regexOnlyNumbers.test(event.target.value)) {\r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        [name]: value\r\n      })\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  ///////// handling date //////////\r\n  handleDate(date) {\r\n    this.setState({\r\n      date: date,\r\n    })\r\n  }\r\n\r\n  ///////// handling the form submission //////////\r\n  handleSubmit(event) {\r\n\r\n    if (this.state.amount === '') {\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'error',\r\n        snackMsg: 'Please Enter Amount!'\r\n      })\r\n    } else if (this.state.description === '') {\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'error',\r\n        snackMsg: 'Please Enter the description of the transaction!'\r\n      })\r\n    } else if (this.state.selectedValue === 'expense') {\r\n      var balance;\r\n      balance = parseFloat(this.state.netAmount) - parseFloat(this.state.amount);\r\n\r\n      if (this.state.netAmount === 0 || balance <= 0)\r\n        this.setState({\r\n          msgOpen: true,\r\n          snackType: 'error',\r\n          snackMsg: 'Amount balance is low!'\r\n        })\r\n    }\r\n    else {\r\n      var obj = {};\r\n      var amt;\r\n      var month;\r\n      month = this.state.date.getMonth() + 1;\r\n\r\n      if (this.state.selectedValue === 'expense') {\r\n        amt = parseFloat(this.state.netAmount) - parseFloat(this.state.amount);\r\n        obj = {\r\n          'income': '',\r\n          'expense': this.state.amount,\r\n          'description': this.state.description,\r\n          'date': (this.state.date).toLocaleDateString(),\r\n          'amount': amt,\r\n        }\r\n        this.setState({\r\n          netAmount: amt\r\n        })\r\n        localStorage.setItem('totalAmount', this.state.netAmount)\r\n      } else {\r\n        amt = parseFloat(this.state.netAmount) + parseFloat(this.state.amount);\r\n        obj = {\r\n          'income': this.state.amount,\r\n          'expense': '',\r\n          'description': this.state.description,\r\n          'date': (this.state.date).toLocaleDateString(),\r\n          'amount': amt,\r\n        }\r\n        this.setState({\r\n          netAmount: amt\r\n        })\r\n        localStorage.setItem('totalAmount', this.state.netAmount)\r\n      }\r\n\r\n      this.state.arr.push(obj);\r\n\r\n      let data = 'data';\r\n      localStorage.setItem(data, JSON.stringify(this.state.arr));\r\n\r\n      if (this.state.selectedValue === 'expense' && month === currentMonth) {\r\n        this.state.totalExpense.push(this.state.amount);\r\n\r\n        localStorage.setItem('totalExpense', JSON.stringify(this.state.totalExpense))\r\n      }\r\n      else if (this.state.selectedValue === 'income' && month === currentMonth) {\r\n        this.state.totalIncome.push(this.state.amount);\r\n\r\n        localStorage.setItem('totalIncome', JSON.stringify(this.state.totalIncome))\r\n      }\r\n\r\n\r\n      this.resetForm();\r\n\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'success',\r\n        snackMsg: 'Successfully recorded!'\r\n      })\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  //////handling snakbar's close button///////\r\n  snackClose = () => {\r\n    this.setState({\r\n      msgOpen: false\r\n    })\r\n  }\r\n\r\n  /////////// resetting the form data after succesfull form submission/////////\r\n  resetForm() {\r\n    this.setState({\r\n      amount: '',\r\n      description: '',\r\n      date: new Date()\r\n    })\r\n  }\r\n\r\n\r\n  //////// navigation to Passbook page /////////\r\n  handlepassbook() {\r\n    this.props.history.push({\r\n      pathname: \"/passbook\",\r\n    })\r\n  }\r\n\r\n  handleMonthlyDetails(){\r\n    this.props.history.push({\r\n      pathname: \"/monthly_details\",\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    localStorage.setItem('totalAmount', (this.state.netAmount))\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <div className='titlebar-container'>\r\n              <Typography variant=\"h6\" noWrap>Transaction Details </Typography>\r\n              <div className='titlebar-user-details'>\r\n                <div>x_deven733</div>\r\n                <div>Amount : ₹ {parseFloat(this.state.netAmount)}</div>\r\n              </div>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.papers}>\r\n            <Typography component=\"h1\" variant=\"h6\" align=\"center\">\r\n              Enter Transaction Details\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                  <FormLabel component=\"legend\">Choose Transaction</FormLabel>\r\n                  <RadioGroup aria-label=\"transaction\"\r\n                    name=\"selectedValue\"\r\n                    value={this.state.selectedValue}\r\n                    onChange={this.handleOnChange}\r\n                    style={{ flex: 'display', flexDirection: 'row' }}>\r\n                    <FormControlLabel value=\"expense\" control={<Radio color=\"primary\" />} label=\"Debit\" />\r\n                    <FormControlLabel value=\"income\" control={<Radio color=\"primary\" />} label=\"Credit\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                <TextField\r\n                  required\r\n                  id=\"income\"\r\n                  name=\"amount\"\r\n                  label=\"Enter Amount\"\r\n                  fullWidth\r\n                  autoComplete=\"Enter Amount\"\r\n                  value={this.state.amount}\r\n                  onChange={this.handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  id=\"descriptions\"\r\n                  name=\"description\"\r\n                  label=\"Description of the transaction\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  autoComplete=\"Enter Transaction's Description\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    naame=\"date\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Choose Date\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={this.state.date}\r\n                    onChange={this.handleDate}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n            </Grid>\r\n            <div style={{ flex: 'display', flexDirection: 'row', textAlign: 'center' }}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submits}\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submits}\r\n                onClick={this.handlepassbook}\r\n              >\r\n                View Passbook\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submits}\r\n                onClick={this.handleMonthlyDetails}\r\n              >\r\n                Current Month Transaction\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n          <SnackBar\r\n            type={this.state.snackType}\r\n            open={this.state.msgOpen}\r\n            message={this.state.snackMsg}\r\n            onClose={() => this.snackClose()}\r\n          />\r\n        </main>\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TransactionDetails);\r\n","import React, { Component } from 'react';\r\nimport { CssBaseline, AppBar, Toolbar, Paper, Typography, Button, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport 'date-fns';\r\nimport styles from './styles';\r\nimport SnackBar from './SnackBar';\r\n\r\n\r\n\r\n\r\nclass ViewPassBook extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            datas: [],\r\n            msgOpen: false,\r\n            snackMsg: \"\",\r\n            snackType: \"\"\r\n        };\r\n        this.handleClear = this.handleClear.bind(this);\r\n        this.handleAddTransaction = this.handleAddTransaction.bind(this);\r\n        this.handleBackToHome = this.handleBackToHome.bind(this);\r\n        this.handleMonthlyDetails = this.handleMonthlyDetails.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        localStorage.getItem('data') && this.setState({\r\n            datas: JSON.parse(localStorage.getItem('data')),\r\n\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.state.datas !== null) {\r\n            this.state.datas.map((item, index) => (\r\n                console.log(item.income)\r\n            ))\r\n        }\r\n\r\n\r\n        console.log(\"View pass book Data:::\" + JSON.stringify(this.state.datas));\r\n    }\r\n\r\n    handleClear() {\r\n        localStorage.clear();\r\n        this.setState({\r\n            msgOpen: true,\r\n            snackType: 'info',\r\n            snackMsg: 'Records Cleared!'\r\n        })\r\n    }\r\n\r\n\r\n    handleAddTransaction() {\r\n        this.props.history.push({\r\n            pathname: \"/transaction_details\",\r\n        })\r\n    }\r\n\r\n    snackClose = () => {\r\n        this.setState({\r\n            msgOpen: false\r\n        })\r\n    }\r\n\r\n    handleBackToHome() {\r\n        this.props.history.push({\r\n            pathname: \"/home\",\r\n        })\r\n    }\r\n\r\n    handleMonthlyDetails() {\r\n        this.props.history.push({\r\n            pathname: \"/monthly_details\",\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                            Passbook\r\n                        </Typography>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <main className={classes.passbooklayout}>\r\n                    <Paper className={classes.papers}>\r\n\r\n\r\n                        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                            Records\r\n                        </Typography>\r\n\r\n\r\n\r\n                        {this.state.datas !== \"\" ? (\r\n                            <div>\r\n                                <Table className={classes.table}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <StyledTableCell align=\"center\">Date</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Description</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Income</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Expense</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Amount</StyledTableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.datas.map((item, index) => (\r\n                                            <StyledTableRow key={index}>\r\n                                                <StyledTableCell align=\"center\">{item.date}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.description}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.income}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.expense}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.amount}</StyledTableCell>\r\n                                            </StyledTableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n\r\n\r\n                                <div style={{ flex: 'display', flexDirection: 'row', textAlign: 'center' }}>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.passbooksubmit}\r\n                                        onClick={this.handleClear}\r\n                                    >\r\n                                        Clear\r\n                                    </Button>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.passbooksubmit}\r\n                                        onClick={this.handleAddTransaction}\r\n                                    >\r\n                                        Add Transaction\r\n                                    </Button>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.passbooksubmit}\r\n                                        onClick={this.handleBackToHome}\r\n                                    >\r\n                                        Home\r\n                                    </Button>\r\n                                    <SnackBar\r\n                                        type={this.state.snackType}\r\n                                        open={this.state.msgOpen}\r\n                                        message={this.state.snackMsg}\r\n                                        onClose={() => this.snackClose()}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                        ) : (\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <h1>Record Empty! Please enter some transactions details!</h1>\r\n                                </div>\r\n                            )}\r\n\r\n                    </Paper>\r\n                </main>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n        backgroundColor: '#50d07d',\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: '#ADD8E6',\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nexport default withStyles(styles)(ViewPassBook);\r\n","import React, { Component } from 'react';\r\nimport {CssBaseline,AppBar,Toolbar,Paper,Typography,Card,CardContent} from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport 'date-fns';\r\nimport './style/listcell.css'\r\nimport styles from './styles';\r\n\r\n\r\nclass CurrentMonthDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalIncome: [],\r\n            totalExpense: [],\r\n            netIncome: '',\r\n            netExpense: ''\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        var netincome = 0;\r\n        var netexpense = 0;\r\n        if (localStorage.getItem('totalIncome') !== null) {\r\n\r\n            var arr1 = JSON.parse(localStorage.getItem('totalIncome'))\r\n            for (var i in arr1) {\r\n              \r\n                netincome = netincome + parseInt(arr1[i])\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            netIncome: netincome\r\n        })\r\n\r\n        if (localStorage.getItem('totalExpense') !== null) {\r\n            var arr2 = JSON.parse(localStorage.getItem('totalExpense'))\r\n            for (var j in arr2) {\r\n                netexpense = netexpense + parseInt(arr2[j])\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            netExpense: netexpense\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        console.log(\"TOTAL INCOME::::\" + this.state.totalIncome);\r\n\r\n        console.log(\"TOTAL EXPENSE::::\" + this.state.totalExpense);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n                    <Toolbar>\r\n\r\n                        <div className='titlebar-container'>\r\n                            <Typography variant=\"h6\" noWrap>Monthly Details </Typography>\r\n                        </div>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <main className={classes.layout}>\r\n                    <Paper className={classes.papers}>\r\n                        <Typography component=\"h1\" variant=\"h6\" align=\"center\">\r\n                            Details of Current Month\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Total Income\r\n                                </Typography>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        Rs. {this.state.netIncome}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Total Expense\r\n                                </Typography>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        Rs. {this.state.netExpense}\r\n                                    </Typography>\r\n\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n\r\n                    </Paper>\r\n\r\n                </main>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CurrentMonthDetails);\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport TransactionDetails from './components/TransactionDetails';\nimport ViewPassBook from './components/ViewPassBook';\nimport CurrentMonthDetails from './components/CurrentMonthDetails'\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/my-finance-manager\">\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Login}/>\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/transaction_details\" component={TransactionDetails}/>\n          <Route path=\"/passbook\" component={ViewPassBook}/>\n          <Route path=\"/monthly_details\" component={CurrentMonthDetails}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}