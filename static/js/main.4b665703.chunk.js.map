{"version":3,"sources":["components/styles.js","components/Login.js","components/Home.js","components/TransactionDetails.js","components/ViewPassBook.js","components/CurrentMonthDetails.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","body","backgroundColor","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","appBar","position","layout","marginLeft","marginRight","breakpoints","up","stepper","padding","submits","papers","marginBottom","passbooklayout","passbooksubmit","card","minWidth","title","fontSize","Login","props","state","username","password","errors","handleLogin","bind","handleInputData","event","preventDefault","target","value","name","this","validUsernameRegex","RegExp","test","length","setState","valid","Object","values","forEach","val","validateForm","alert","history","push","pathname","classes","Container","component","maxWidth","style","CssBaseline","className","Typography","variant","paddingTop","onSubmit","handleSubmit","TextField","required","fullWidth","label","autoComplete","onChange","type","Button","color","onClick","Component","withStyles","Home","handleTransaction","handlePassbook","handleMonthlyDetails","Fragment","AppBar","Toolbar","noWrap","currentMonth","Date","getMonth","TransactionDetails","arr","income","expense","amount","description","date","selectedValue","netAmount","totalIncome","totalExpense","handleOnChange","handleDate","handlepassbook","resetForm","localStorage","getItem","JSON","parse","amt","id","obj","parseFloat","toLocaleDateString","setItem","console","log","stringify","Paper","align","Grid","container","item","xs","FormControl","formControl","FormLabel","RadioGroup","aria-label","flex","FormControlLabel","control","Radio","utils","DateFnsUtils","naame","format","KeyboardButtonProps","textAlign","ViewPassBook","datas","handleClear","handleAddTransaction","map","index","clear","Table","table","TableHead","TableRow","StyledTableCell","TableBody","StyledTableRow","key","head","palette","common","white","TableCell","root","CurrentMonthDetails","netIncome","netExpense","netincome","netexpense","arr1","i","parseInt","arr2","j","Card","CardContent","gutterBottom","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b665703.chunk.js","sourcesContent":["\r\n\r\nconst styles = (theme) => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: '#50d07d',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(16),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    submits: {\r\n        margin: theme.spacing(3, 3, 3),\r\n        width: \"40%\",\r\n    },\r\n    papers: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    passbooklayout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: \"90%\",\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    passbooksubmit: {\r\n        margin: theme.spacing(3, 2, 2),\r\n        width: '40%'\r\n    },\r\n    card: {\r\n        minWidth: 275,\r\n        marginRight: '5px',\r\n        marginTop: '10px'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n\r\n});\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport { Button, CssBaseline, TextField, Typography, Container } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from './styles';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {\r\n        username: '',\r\n        password: ''\r\n      }\r\n    }\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleInputData = this.handleInputData.bind(this);\r\n  }\r\n\r\n  handleInputData(event) {\r\n    event.preventDefault();\r\n\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    let errors = this.state.errors;\r\n\r\n    const validUsernameRegex = RegExp(/[^A-Za-z0-9]/);\r\n\r\n    switch (name) {\r\n      case 'username':\r\n        errors.username = validUsernameRegex.test(value) ? 'Invalid Username' : (value.length < 5 ? 'Username must be 5 characters long!' : '');\r\n        break;\r\n      case 'password':\r\n        errors.password = (value.length < 8) ? 'Password must be 8 characters long!' : '';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n     this.setState({ errors, [name]: value })\r\n\r\n  }\r\n\r\n\r\n  handleLogin(event) {\r\n   \r\n\r\n    const validateForm = (errors) => {\r\n      let valid = true;\r\n      Object.values(errors).forEach(\r\n        (val) => val.length > 0 && (valid = false)\r\n      );\r\n      return valid;\r\n    }\r\n\r\n    if(validateForm(this.state.errors) && this.state.username === \"deven733\" && this.state.password === \"12345678\") {\r\n      this.props.history.push({\r\n             pathname: \"/home\",\r\n           })\r\n    }else if ( this.state.username === '' || this.state.password === '') {\r\n         alert(\"Please fill up the details below!\");\r\n       }\r\n  else{\r\n      alert('Invalid Form')\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { errors } = this.state;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\" style={{ backgroundColor: 'white' }}>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\" style={{ paddingTop: 10 }}>\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Enter Your Username\"\r\n              name=\"username\"\r\n              //type=\"text\"\r\n              autoComplete=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleInputData}\r\n            />\r\n             {errors.username.length > 0 && <span className='error'>{errors.username}</span>} \r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Enter Your Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={this.state.password}\r\n              onChange={this.handleInputData}\r\n            />\r\n            {errors.password.length > 0 && <span className='error'>{errors.password}</span>} \r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={this.handleLogin}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Login);\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {Button,CssBaseline,Typography,Container,AppBar,Toolbar} from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from './styles';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleTransaction = this.handleTransaction.bind(this);\r\n        this.handlePassbook = this.handlePassbook.bind(this);\r\n        this.handleMonthlyDetails = this.handleMonthlyDetails.bind(this);\r\n    }\r\n\r\n    handleTransaction() {\r\n        this.props.history.push({\r\n            pathname: \"/transaction_details\",\r\n        })\r\n    }\r\n\r\n    handlePassbook() {\r\n        this.props.history.push({\r\n            pathname: \"/passbook\",\r\n        })\r\n    }\r\n\r\n    handleMonthlyDetails() {\r\n        this.props.history.push({\r\n            pathname: \"/monthly_details\",\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <div className='titlebar-container'>\r\n                            <Typography variant=\"h6\" noWrap>Home</Typography>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Container component=\"main\" maxWidth=\"xs\" style={{ backgroundColor: 'white' }}>\r\n                    <div className={classes.paper}>\r\n                        <Typography component=\"h1\" variant=\"h5\" style={{ paddingTop: 10 }}>\r\n                            Finance Manager\r\n                        </Typography>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handleTransaction}\r\n                        >\r\n                            ADD TRANSACTION\r\n                        </Button>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handlePassbook}\r\n                        >\r\n                            VIEW PASSBOOK\r\n                        </Button>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handleMonthlyDetails}\r\n                        >\r\n                            CURRENT MONTH DETAILS\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Home);","import React, { Component } from 'react';\r\nimport { Button, CssBaseline, Typography, AppBar, Toolbar, Paper, Grid, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport 'date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport './style/listcell.css'\r\nimport styles from './styles';\r\n\r\nvar dt = new Date();\r\nvar currentMonth = dt.getMonth() + 1;\r\n\r\nclass TransactionDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      arr: [],\r\n      income: '',\r\n      expense: '',\r\n      amount: '',\r\n      description: '',\r\n      date: new Date(),\r\n      selectedValue: 'expense',\r\n      netAmount: 0,\r\n      totalIncome: [],\r\n      totalExpense: []\r\n    }\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n    this.handleDate = this.handleDate.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handlepassbook = this.handlepassbook.bind(this);\r\n    this.resetForm = this.resetForm.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    localStorage.getItem('data') && this.setState({\r\n      arr: JSON.parse(localStorage.getItem('data')),\r\n    })\r\n\r\n    localStorage.getItem('totalIncome') && this.setState({\r\n      totalIncome: JSON.parse(localStorage.getItem('totalIncome')),\r\n    })\r\n\r\n    localStorage.getItem('totalExpense') && this.setState({\r\n      totalExpense: JSON.parse(localStorage.getItem('totalExpense')),\r\n    })\r\n\r\n    localStorage.getItem('totalAmount') && this.setState({\r\n      netAmount: JSON.parse(localStorage.getItem('totalAmount')),\r\n    })\r\n  }\r\n\r\n\r\n  handleOnChange(event) {\r\n\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    if (name === 'amount') {\r\n      const regexOnlyNumbers = /^[0-9\\b]+$/;\r\n      if (event.target.value === '' || regexOnlyNumbers.test(event.target.value)) {\r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        [name]: value\r\n      })\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleDate(date) {\r\n    this.setState({\r\n      date: date,\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n\r\n    if (this.state.amount === '' || this.state.description === '') {\r\n      alert(\"Please fill up the details!!\");\r\n    }\r\n    else {\r\n      var obj = {};\r\n      var amt;\r\n      var id;\r\n      id = this.state.date.getMonth() + 1;\r\n      if (this.state.selectedValue === 'expense') {\r\n        amt = parseFloat(this.state.netAmount) - parseFloat(this.state.amount);\r\n        obj = {\r\n          'income': '',\r\n          'expense': this.state.amount,\r\n          'description': this.state.description,\r\n          'date': (this.state.date).toLocaleDateString(),\r\n          'amount': amt,\r\n        }\r\n        this.setState({\r\n          netAmount: amt\r\n        })\r\n        localStorage.setItem('totalAmount', this.state.netAmount)\r\n      } else {\r\n        amt = parseFloat(this.state.netAmount) + parseFloat(this.state.amount);\r\n        obj = {\r\n          'income': this.state.amount,\r\n          'expense': '',\r\n          'description': this.state.description,\r\n          'date': (this.state.date).toLocaleDateString(),\r\n          'amount': amt,\r\n        }\r\n        this.setState({\r\n          netAmount: amt\r\n        })\r\n\r\n        localStorage.setItem('totalAmount', this.state.netAmount)\r\n      }\r\n\r\n      console.log(\"Object::::\" + JSON.stringify(obj))\r\n\r\n      this.state.arr.push(obj);\r\n\r\n      let data = 'data';\r\n      localStorage.setItem(data, JSON.stringify(this.state.arr));\r\n\r\n\r\n      if (this.state.selectedValue === 'expense' && id === currentMonth) {\r\n        this.state.totalExpense.push(this.state.amount);\r\n\r\n        localStorage.setItem('totalExpense', JSON.stringify(this.state.totalExpense))\r\n      }\r\n      else if (this.state.selectedValue === 'income' && id === currentMonth) {\r\n        this.state.totalIncome.push(this.state.amount);\r\n\r\n        localStorage.setItem('totalIncome', JSON.stringify(this.state.totalIncome))\r\n      }\r\n\r\n      this.resetForm();\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      amount: '',\r\n      description: '',\r\n      date: new Date()\r\n    })\r\n  }\r\n\r\n  handlepassbook() {\r\n    this.props.history.push({\r\n      pathname: \"/passbook\",\r\n    })\r\n  }\r\n\r\n  render() {\r\n    localStorage.setItem('totalAmount', (this.state.netAmount))\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <div className='titlebar-container'>\r\n              <Typography variant=\"h6\" noWrap>Transaction Details </Typography>\r\n              <div className='titlebar-user-details'>\r\n                <div>Amount : {parseFloat(this.state.netAmount)}</div>\r\n                x_deven733\r\n                </div>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.papers}>\r\n            <Typography component=\"h1\" variant=\"h6\" align=\"center\">\r\n              Enter Transaction Details\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                  <FormLabel component=\"legend\">Choose Transaction</FormLabel>\r\n                  <RadioGroup aria-label=\"transaction\"\r\n                    name=\"selectedValue\"\r\n                    value={this.state.selectedValue}\r\n                    onChange={this.handleOnChange}\r\n                    style={{ flex: 'display', flexDirection: 'row' }}>\r\n                    <FormControlLabel value=\"expense\" control={<Radio color=\"primary\" />} label=\"Debit\" />\r\n                    <FormControlLabel value=\"income\" control={<Radio color=\"primary\" />} label=\"Credit\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                <TextField\r\n                  required\r\n                  id=\"income\"\r\n                  name=\"amount\"\r\n                  label=\"Enter Amount\"\r\n                  fullWidth\r\n                  autoComplete=\"Enter Amount\"\r\n                  value={this.state.amount}\r\n                  onChange={this.handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  id=\"descriptions\"\r\n                  name=\"description\"\r\n                  label=\"Description of the transaction\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  autoComplete=\"Enter Transaction's Description\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    naame=\"date\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Choose Date\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={this.state.date}\r\n                    onChange={this.handleDate}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n            </Grid>\r\n            <div style={{ flex: 'display', flexDirection: 'row', textAlign: 'center' }}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submits}\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submits}\r\n                onClick={this.handlepassbook}\r\n              >\r\n                View Passbook\r\n            </Button>\r\n            </div>\r\n          </Paper>\r\n        </main>\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TransactionDetails);\r\n","import React, { Component } from 'react';\r\nimport {CssBaseline,AppBar,Toolbar,Paper,Typography,Button,Table,TableBody,TableCell,TableHead,TableRow} from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport 'date-fns';\r\nimport styles from './styles';\r\n\r\n\r\n\r\n\r\nclass ViewPassBook extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            datas: [],\r\n        };\r\n        this.handleClear = this.handleClear.bind(this);\r\n        this.handleAddTransaction = this.handleAddTransaction.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        localStorage.getItem('data') && this.setState({\r\n            datas: JSON.parse(localStorage.getItem('data')),\r\n\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.state.datas !== null) {\r\n            this.state.datas.map((item, index) => (\r\n                console.log(item.income)\r\n            ))\r\n        }\r\n\r\n\r\n        console.log(\"View pass book Data:::\" + JSON.stringify(this.state.datas));\r\n    }\r\n\r\n    handleClear() {\r\n        localStorage.clear();\r\n    }\r\n\r\n\r\n    handleAddTransaction() {\r\n        this.props.history.push({\r\n            pathname: \"/transaction_details\",\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                            Passbook\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <main className={classes.passbooklayout}>\r\n                    <Paper className={classes.papers}>\r\n                        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                            Records\r\n                        </Typography>\r\n                        {this.state.datas !== \"\" ? (\r\n                            <div>\r\n                                <Table className={classes.table}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <StyledTableCell align=\"center\">Date</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Description</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Income</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Expense</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Amount</StyledTableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.datas.map((item, index) => (\r\n                                            <StyledTableRow key={index}>\r\n                                                <StyledTableCell align=\"center\">{item.date}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.description}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.income}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.expense}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.amount}</StyledTableCell>\r\n                                            </StyledTableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n\r\n\r\n                                <div style={{ flex: 'display', flexDirection: 'row', textAlign: 'center' }}>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.passbooksubmit}\r\n                                        onClick={this.handleClear}\r\n                                    >\r\n                                        Clear\r\n                                    </Button>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.passbooksubmit}\r\n                                        onClick={this.handleAddTransaction}\r\n                                    >\r\n                                        Add Transaction\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ) : (\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <h1>Record Empty! Please enter some transactions details!</h1>\r\n                                </div>\r\n                            )}\r\n\r\n                    </Paper>\r\n\r\n                </main>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n        backgroundColor: '#50d07d',\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: '#ADD8E6',\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\nexport default withStyles(styles)(ViewPassBook);\r\n","import React, { Component } from 'react';\r\nimport {CssBaseline,AppBar,Toolbar,Paper,Typography,Card,CardContent} from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport 'date-fns';\r\nimport './style/listcell.css'\r\nimport styles from './styles';\r\n\r\n\r\nclass CurrentMonthDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalIncome: [],\r\n            totalExpense: [],\r\n            netIncome: '',\r\n            netExpense: ''\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        var netincome = 0;\r\n        var netexpense = 0;\r\n        if (localStorage.getItem('totalIncome') !== null) {\r\n\r\n            var arr1 = JSON.parse(localStorage.getItem('totalIncome'))\r\n            for (var i in arr1) {\r\n              \r\n                netincome = netincome + parseInt(arr1[i])\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            netIncome: netincome\r\n        })\r\n\r\n        if (localStorage.getItem('totalExpense') !== null) {\r\n            var arr2 = JSON.parse(localStorage.getItem('totalExpense'))\r\n            for (var j in arr2) {\r\n                netexpense = netexpense + parseInt(arr2[j])\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            netExpense: netexpense\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        console.log(\"TOTAL INCOME::::\" + this.state.totalIncome);\r\n\r\n        console.log(\"TOTAL EXPENSE::::\" + this.state.totalExpense);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n                    <Toolbar>\r\n\r\n                        <div className='titlebar-container'>\r\n                            <Typography variant=\"h6\" noWrap>Monthly Details </Typography>\r\n                        </div>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <main className={classes.layout}>\r\n                    <Paper className={classes.papers}>\r\n                        <Typography component=\"h1\" variant=\"h6\" align=\"center\">\r\n                            Details of Current Month\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Total Income\r\n                                </Typography>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        Rs. {this.state.netIncome}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Total Expense\r\n                                </Typography>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        Rs. {this.state.netExpense}\r\n                                    </Typography>\r\n\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n\r\n                    </Paper>\r\n\r\n                </main>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CurrentMonthDetails);\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport TransactionDetails from './components/TransactionDetails';\nimport ViewPassBook from './components/ViewPassBook';\nimport CurrentMonthDetails from './components/CurrentMonthDetails'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Login}/>\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/transaction_details\" component={TransactionDetails}/>\n          <Route path=\"/passbook\" component={ViewPassBook}/>\n          <Route path=\"/monthly_details\" component={CurrentMonthDetails}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}