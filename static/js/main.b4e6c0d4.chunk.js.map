{"version":3,"sources":["components/SnackBarWrapper.js","components/SnackBar.js","components/styles.js","components/Login.js","components/Home.js","components/TransactionDetails.js","components/ViewPassBook.js","components/CurrentMonthDetails.js","App.js","serviceWorker.js","index.js"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","SnackBarWrapper","props","classes","useStyles1","className","message","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","id","icon","iconVariant","action","IconButton","key","aria-label","color","onClick","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","fontSize","opacity","marginRight","spacing","display","alignItems","SnackBar","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","type","prototypes","PropTypes","string","func","styles","body","root","width","paper","marginTop","flexDirection","form","submit","margin","login","close","padding","appBar","position","layout","marginLeft","breakpoints","up","thismonth_layout","thismonth_papers","marginBottom","down","card","overflowX","title","papers","stepper","submits","passbooklayout","passbooksubmit","icon_style","textbutton","table","minWidth","Login","snackClose","setState","msgOpen","state","username","password","errors","snackMsg","snackType","handleLogin","bind","handleInputData","target","value","name","this","localStorage","setItem","history","push","pathname","preventDefault","getItem","Container","component","maxWidth","style","CssBaseline","textAlign","Typography","paddingTop","onSubmit","handleSubmit","TextField","required","fullWidth","label","autoComplete","onChange","Button","Component","withStyles","Home","handleTransaction","handlePassbook","handleMonthlyDetails","handleLogout","removeItem","Fragment","AppBar","Toolbar","noWrap","currentMonth","Date","getMonth","TransactionDetails","handleOnChange","resetForm","amount","description","date","handlepassbook","handleHome","arr","income","expense","selectedValue","netAmount","totalIncome","totalExpense","handleDate","JSON","parse","amt","month","obj","parseFloat","toLocaleDateString","stringify","Paper","align","Grid","container","item","xs","FormControl","formControl","FormLabel","RadioGroup","flex","FormControlLabel","control","Radio","utils","DateFnsUtils","naame","format","KeyboardButtonProps","ViewPassBook","handleClear","alert","datas","handleAddTransaction","Table","TableHead","TableRow","StyledTableCell","TableBody","map","index","StyledTableRow","head","common","white","TableCell","CurrentMonthDetails","netIncome","netExpense","netincome","netexpense","arr1","i","arr2","j","justifyContent","Card","CardContent","gutterBottom","App","basename","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4iBAaMA,EAAc,CAClBC,QAASC,IACTC,QAASC,IACTC,MAAOC,IACPC,KAAMC,KAIO,SAASC,EAAgBC,GACtC,IAAMC,EAAUC,IACRC,EAAmDH,EAAnDG,UAAWC,EAAwCJ,EAAxCI,QAASC,EAA+BL,EAA/BK,QAASC,EAAsBN,EAAtBM,QAAYC,EAFJ,YAEcP,EAFd,6CAGvCQ,EAAOlB,EAAYgB,GAEzB,OACE,kBAACG,EAAA,EAAD,eACEN,UAAWO,YAAKT,EAAQK,GAAUH,GAClCQ,mBAAiB,kBACjBP,QACE,0BAAMQ,GAAG,kBAAkBT,UAAWF,EAAQG,SAC5C,kBAACI,EAAD,CAAML,UAAWO,YAAKT,EAAQY,KAAMZ,EAAQa,eAC3CV,GAGLW,OAAQ,CACN,kBAACC,EAAA,EAAD,CAAYC,IAAI,QAAQC,aAAW,QAAQC,MAAM,UAAUC,QAASf,GAClE,kBAAC,IAAD,CAAWF,UAAWF,EAAQY,UAG9BN,IAaV,IAAML,EAAamB,aAAW,SAAAC,GAAK,MAAK,CACpC/B,QAAS,CACPgC,gBAAiBC,IAAM,MAEzB7B,MAAO,CACL4B,gBAAiBD,EAAMG,QAAQ9B,MAAM+B,MAEvC7B,KAAM,CACJ0B,gBAAiBD,EAAMG,QAAQE,QAAQC,MAEzCnC,QAAS,CACP8B,gBAAiBM,IAAM,MAEzBhB,KAAM,CACJiB,SAAU,IAEZhB,YAAa,CACXiB,QAAS,GACTC,YAAaV,EAAMW,QAAQ,IAE7B7B,QAAS,CACP8B,QAAS,OACTC,WAAY,cCtEH,SAASC,EAASpC,GAE7B,SAASqC,EAAYC,EAAOC,GACT,cAAXA,GAGJvC,EAAMK,SAAQ,GAElB,OACI,kBAACmC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAM5C,EAAM4C,KACZC,iBAAkB,IAClBxC,QAASgC,GAET,kBAACtC,EAAD,CACIM,QAASgC,EACT/B,QAASN,EAAM8C,KACf1C,QAASJ,EAAMI,WAM/BgC,EAASW,WAAa,CAClBD,KAAME,IAAUC,OAChBL,KAAMI,IAAUC,OAChB7C,QAAS4C,IAAUC,OACnB5C,QAAQ2C,IAAUE,M,WCmFPC,EAtHA,SAAC7B,GAAD,YAAY,CACvB,UAAW,CACP8B,KAAM,CACF7B,gBAAiB,YAGzB8B,KAAM,CACFC,MAAO,QAEXC,MAAO,CACHC,UAAWlC,EAAMW,QAAQ,IACzBC,QAAS,OACTuB,cAAe,SACftB,WAAY,UAEhBuB,KAAM,CACFJ,MAAO,OACPE,UAAWlC,EAAMW,QAAQ,IAE7B0B,OAAQ,CACJC,OAAQtC,EAAMW,QAAQ,EAAG,EAAG,GAC5BqB,MAAO,OAEXO,MAAO,CACHD,OAAQtC,EAAMW,QAAQ,EAAG,EAAG,IAEhC6B,MAAO,CACHC,QAASzC,EAAMW,QAAQ,KAE3B+B,OAAQ,CACJC,SAAU,WACVX,MAAO,QAEXY,OAAO,aACHZ,MAAO,OACPa,WAAY7C,EAAMW,QAAQ,GAC1BD,YAAaV,EAAMW,QAAQ,IAC1BX,EAAM8C,YAAYC,GAAG,IAAyB,EAAnB/C,EAAMW,QAAQ,IAAU,CAChDqB,MAAO,IACPa,WAAY,OACZnC,YAAa,SAGrBsC,iBAAiB,CACbhB,MAAM,OACNa,WAAY7C,EAAMW,QAAQ,GAC1BD,YAAaV,EAAMW,QAAQ,IAE/BsC,iBAAiB,aACbjB,MAAO,MACPE,UAAWlC,EAAMW,QAAQ,GACzBuC,aAAclD,EAAMW,QAAQ,GAC5B8B,QAASzC,EAAMW,QAAQ,IACtBX,EAAM8C,YAAYK,KAAK,IAAyB,EAAnBnD,EAAMW,QAAQ,IAAU,CAClDuB,UAAWlC,EAAMW,QAAQ,GACzBuC,aAAclD,EAAMW,QAAQ,GAC5B8B,QAASzC,EAAMW,QAAQ,GACvBqB,MAAM,SAGdoB,KAAM,CACFpB,MAAM,MACNtB,YAAa,MACbwB,UAAW,OACXmB,UAAU,QAGdC,MAAO,CACH9C,SAAU,IAEd+C,QAAM,GACFvB,MAAO,OACPE,UAAWlC,EAAMW,QAAQ,GACzBuC,aAAclD,EAAMW,QAAQ,GAC5B8B,QAASzC,EAAMW,QAAQ,IAJrB,cAKDX,EAAM8C,YAAYC,GAAG,IAAyB,EAAnB/C,EAAMW,QAAQ,IAAU,CAChDuB,UAAWlC,EAAMW,QAAQ,GACzBuC,aAAclD,EAAMW,QAAQ,GAC5B8B,QAASzC,EAAMW,QAAQ,KARzB,0BAUS,QAVT,GAYN6C,QAAS,CACLf,QAASzC,EAAMW,QAAQ,EAAG,EAAG,IAEjC8C,QAAS,CACLnB,OAAQtC,EAAMW,QAAQ,EAAG,EAAG,GAC5BqB,MAAO,OAGX0B,eAAe,aACX1B,MAAO,OACPa,WAAY7C,EAAMW,QAAQ,GAC1BD,YAAaV,EAAMW,QAAQ,IAC1BX,EAAM8C,YAAYC,GAAG,IAAyB,EAAnB/C,EAAMW,QAAQ,IAAU,CAChDqB,MAAO,OACPa,WAAY,OACZnC,YAAa,SAGrBiD,eAAgB,CACZrB,OAAQtC,EAAMW,QAAQ,EAAG,EAAG,GAC5BqB,MAAO,QAIX4B,WAAY,CACRtB,OAAQtC,EAAMW,QAAQ,IAE1BkD,WAAY,CACRvB,OAAQtC,EAAMW,QAAQ,IAE1BmD,MAAO,CACHC,SAAU,OC5GZC,E,YACJ,WAAYtF,GAAQ,IAAD,8BACjB,4CAAMA,KA0DRuF,WAAa,WACX,EAAKC,SAAS,CACZC,SAAS,KA3DX,EAAKC,MAAQ,CACXC,SAAU,GACVC,SAAU,GACVC,OAAQ,CACNF,SAAU,GACVC,SAAU,IAEZH,SAAS,EACTK,SAAU,GACVC,UAAW,IAEb,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBAdN,E,6EAkBH3D,GACd,IAAM6D,EAAS7D,EAAM6D,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KACpBC,KAAKd,SAAL,eACGa,EAAOD,M,kCAMA9D,GACkB,cAAxBgE,KAAKZ,MAAMC,UAAoD,aAAxBW,KAAKZ,MAAME,UACpDW,aAAaC,QAAQ,YAAY,GACjCF,KAAKtG,MAAMyG,QAAQC,KAAK,CACtBC,SAAU,WAEqB,KAAxBL,KAAKZ,MAAMC,SACpBW,KAAKd,SAAS,CACZC,SAAS,EACTM,UAAW,QACXD,SAAU,2BAEqB,KAAxBQ,KAAKZ,MAAME,SACpBU,KAAKd,SAAS,CACZC,SAAS,EACTM,UAAW,QACXD,SAAU,2BAIZQ,KAAKd,SAAS,CACZC,SAAS,EACTM,UAAW,QACXD,SAAU,4DAGdxD,EAAMsE,mB,0CAWFL,aAAaM,QAAQ,aACvBP,KAAKtG,MAAMyG,QAAQC,KAAK,CACtBC,SAAU,Y,+BAKN,IAAD,OACC1G,EAAYqG,KAAKtG,MAAjBC,QACR,OACE,6BAEE,kBAAC6G,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKC,MAAO,CAAE1F,gBAAiB,UAClE,kBAAC2F,EAAA,EAAD,MACA,yBAAK/G,UAAWF,EAAQsD,OACtB,uBAAG0D,MAAO,CAAEE,UAAW,WACrB,mEAEF,kBAACC,EAAA,EAAD,CAAYL,UAAU,KAAKzG,QAAQ,KAAK2G,MAAO,CAAEI,WAAY,KAA7D,WAGA,0BAAMlH,UAAWF,EAAQyD,KAAM4D,SAAUhB,KAAKiB,cAC5C,kBAACC,EAAA,EAAD,CACElH,QAAQ,WACRsD,OAAO,SACP6D,UAAQ,EACRC,WAAS,EACTC,MAAM,sBACNtB,KAAK,WACLuB,aAAa,WACbxB,MAAOE,KAAKZ,MAAMC,SAClBkC,SAAUvB,KAAKJ,kBAEjB,kBAACsB,EAAA,EAAD,CACElH,QAAQ,WACRsD,OAAO,SACP6D,UAAQ,EACRC,WAAS,EACTrB,KAAK,WACLsB,MAAM,sBACN7E,KAAK,WACL8E,aAAa,mBACbxB,MAAOE,KAAKZ,MAAME,SAClBiC,SAAUvB,KAAKJ,kBAEjB,kBAAC4B,EAAA,EAAD,CACEhF,KAAK,SACL4E,WAAS,EACTpH,QAAQ,YACRa,MAAM,UACNhB,UAAWF,EAAQ4D,MACnBzC,QAASkF,KAAKN,aANhB,YAYJ,kBAAC5D,EAAD,CACEU,KAAMwD,KAAKZ,MAAMK,UACjBnD,KAAM0D,KAAKZ,MAAMD,QACjBrF,QAASkG,KAAKZ,MAAMI,SACpBzF,QAAS,kBAAM,EAAKkF,sB,GAhIZwC,aAyILC,cAAW7E,EAAX6E,CAAmB1C,G,yECvI5B2C,G,2MAUFC,kBAAoB,WAChB,EAAKlI,MAAMyG,QAAQC,KAAK,CACpBC,SAAU,0B,EAIlBwB,eAAiB,WACb,EAAKnI,MAAMyG,QAAQC,KAAK,CACpBC,SAAU,e,EAIlByB,qBAAuB,WACnB,EAAKpI,MAAMyG,QAAQC,KAAK,CACpBC,SAAU,sB,EAIlB0B,aAAe,WACX9B,aAAa+B,WAAW,YACzB,EAAKtI,MAAMyG,QAAQC,KAAK,CACpBC,SAAS,O,mFA5BRJ,aAAaM,QAAQ,aACrBP,KAAKtG,MAAMyG,QAAQC,KAAK,CACpBC,SAAU,Q,+BA8BZ,IACE1G,EAAYqG,KAAKtG,MAAjBC,QACR,OACI,kBAAC,IAAMsI,SAAP,KACI,kBAACrB,EAAA,EAAD,MACA,kBAACsB,EAAA,EAAD,CAAQvE,SAAS,WAAW9C,MAAM,UAAUhB,UAAWF,EAAQ+D,QAC3D,kBAACyE,EAAA,EAAD,KACI,yBAAKtI,UAAU,sBACX,kBAACiH,EAAA,EAAD,CAAY9G,QAAQ,KAAKoI,QAAM,GAA/B,QACA,kBAACZ,EAAA,EAAD,CAAQ3H,UAAWF,EAAQkF,WAAY/D,QAASkF,KAAK+B,cAArD,aAIZ,kBAACvB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKC,MAAO,CAAE1F,gBAAiB,YAChE,yBAAKpB,UAAWF,EAAQsD,OACpB,kBAAC6D,EAAA,EAAD,CAAYL,UAAU,KAAKzG,QAAQ,KAAK2G,MAAO,CAAEI,WAAY,GAAGlG,MAAM,QAAQW,SAAS,KACnF,+CAEJ,kBAACgG,EAAA,EAAD,CACIhF,KAAK,SACLxC,QAAQ,YACRa,MAAM,UACNhB,UAAWF,EAAQ0D,OACnBvC,QAASkF,KAAK4B,mBAElB,kBAAC,IAAD,CAAa/H,UAAWF,EAAQiF,aAPhC,mBAUA,kBAAC4C,EAAA,EAAD,CACIhF,KAAK,SACLxC,QAAQ,YACRa,MAAM,UACNhB,UAAWF,EAAQ0D,OACnBvC,QAASkF,KAAK6B,gBAElB,kBAAC,KAAD,CAA0BhI,UAAWF,EAAQiF,aAP7C,iBAUA,kBAAC4C,EAAA,EAAD,CACIhF,KAAK,SACLxC,QAAQ,YACRa,MAAM,UACNhB,UAAWF,EAAQ0D,OACnBvC,QAASkF,KAAK8B,sBAElB,kBAAC,KAAD,CAAcjI,UAAWF,EAAQiF,aAPjC,gC,GAzEL6C,aA0FJC,eAAW7E,EAAX6E,CAAmBC,I,iGCxF9BU,I,OADK,IAAIC,MACSC,WAAa,GAE7BC,G,YAEJ,WAAY9I,GAAQ,IAAD,8BAEjB,4CAAMA,KAkDR+I,eAAiB,SAACzG,GAChB,IAAM6D,EAAS7D,EAAM6D,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAGpB,EAAKb,SAAL,eACGa,EAAOD,IAEV9D,EAAMsE,kBA7DW,EA8JnBrB,WAAa,WACX,EAAKC,SAAS,CACZC,SAAS,KAhKM,EAqKnBuD,UAAY,WACV,EAAKxD,SAAS,CACZyD,OAAQ,GACRC,YAAa,GACbC,KAAM,IAAIP,QAzKK,EA+KnBQ,eAAiB,WACf,EAAKpJ,MAAMyG,QAAQC,KAAK,CACtBC,SAAU,eAjLK,EAqLnByB,qBAAuB,WACrB,EAAKpI,MAAMyG,QAAQC,KAAK,CACtBC,SAAU,sBAvLK,EA2LnB0C,WAAa,WACX,EAAKrJ,MAAMyG,QAAQC,KAAK,CACtBC,SAAS,UA1LX,EAAKjB,MAAQ,CACXC,SAAU,GACV2D,IAAK,GACLC,OAAQ,GACRC,QAAS,GACTP,OAAQ,GACRC,YAAa,GACbC,KAAM,IAAIP,KACVa,cAAe,SACfC,UAAW,EACXC,YAAa,GACbC,aAAc,GACdnE,SAAS,EACTK,SAAU,GACVC,UAAW,IAEb,EAAKgD,eAAiB,EAAKA,eAAe9C,KAApB,gBACtB,EAAK4D,WAAa,EAAKA,WAAW5D,KAAhB,gBAClB,EAAKsB,aAAe,EAAKA,aAAatB,KAAlB,gBArBH,E,iFA2BZM,aAAaM,QAAQ,aACxBP,KAAKtG,MAAMyG,QAAQC,KAAK,CACtBC,SAAU,MAIdJ,aAAaM,QAAQ,gBAAkBP,KAAKd,SAAS,CACnDkE,UAAWI,KAAKC,MAAMxD,aAAaM,QAAQ,kBAG7CN,aAAaM,QAAQ,SAAWP,KAAKd,SAAS,CAC5C8D,IAAKQ,KAAKC,MAAMxD,aAAaM,QAAQ,WAGvCN,aAAaM,QAAQ,gBAAkBP,KAAKd,SAAS,CACnDmE,YAAaG,KAAKC,MAAMxD,aAAaM,QAAQ,kBAG/CN,aAAaM,QAAQ,iBAAmBP,KAAKd,SAAS,CACpDoE,aAAcE,KAAKC,MAAMxD,aAAaM,QAAQ,qB,iCAmBvCsC,GACT7C,KAAKd,SAAS,CACZ2D,KAAMA,M,mCAKG7G,GAEX,GAA0B,KAAtBgE,KAAKZ,MAAMuD,OACb3C,KAAKd,SAAS,CACZC,SAAS,EACTM,UAAW,QACXD,SAAU,8BAEP,GAA+B,KAA3BQ,KAAKZ,MAAMwD,YACpB5C,KAAKd,SAAS,CACZC,SAAS,EACTM,UAAW,QACXD,SAAU,yDAGT,CACH,IACIkE,EACAC,EAFAC,EAAM,GAKV,GAFAD,EAAQ3D,KAAKZ,MAAMyD,KAAKN,WAAa,EAEJ,YAA7BvC,KAAKZ,MAAM+D,cAA6B,CAE1C,GADAO,EAAMG,WAAW7D,KAAKZ,MAAMgE,WAAaS,WAAW7D,KAAKZ,MAAMuD,QAClC,IAAzB3C,KAAKZ,MAAMgE,WAAmBM,EAAM,EAMtC,YALA1D,KAAKd,SAAS,CACZC,SAAS,EACTM,UAAW,QACXD,SAAU,2BAKZoE,EAAM,CACJ,OAAU,GACV,QAAW5D,KAAKZ,MAAMuD,OACtB,YAAe3C,KAAKZ,MAAMwD,YAC1B,KAAS5C,KAAKZ,MAAMyD,KAAMiB,qBAC1B,OAAUJ,GAEZ1D,KAAKd,SAAS,CACZkE,UAAWM,IAEbzD,aAAaC,QAAQ,cAAewD,QAGtCA,EAAMG,WAAW7D,KAAKZ,MAAMgE,WAAaS,WAAW7D,KAAKZ,MAAMuD,QAC/DiB,EAAM,CACJ,OAAU5D,KAAKZ,MAAMuD,OACrB,QAAW,GACX,YAAe3C,KAAKZ,MAAMwD,YAC1B,KAAS5C,KAAKZ,MAAMyD,KAAMiB,qBAC1B,OAAUJ,GAEZ1D,KAAKd,SAAS,CACZkE,UAAWM,IAEbzD,aAAaC,QAAQ,cAAewD,GAGtC1D,KAAKZ,MAAM4D,IAAI5C,KAAKwD,GAGpB3D,aAAaC,QADF,OACgBsD,KAAKO,UAAU/D,KAAKZ,MAAM4D,MAEpB,YAA7BhD,KAAKZ,MAAM+D,eAA+BQ,IAAUtB,IACtDrC,KAAKZ,MAAMkE,aAAalD,KAAKJ,KAAKZ,MAAMuD,QACxC1C,aAAaC,QAAQ,eAAgBsD,KAAKO,UAAU/D,KAAKZ,MAAMkE,gBAE3B,WAA7BtD,KAAKZ,MAAM+D,eAA8BQ,IAAUtB,KAC1DrC,KAAKZ,MAAMiE,YAAYjD,KAAKJ,KAAKZ,MAAMuD,QACvC1C,aAAaC,QAAQ,cAAesD,KAAKO,UAAU/D,KAAKZ,MAAMiE,eAGhErD,KAAK0C,YAEL1C,KAAKd,SAAS,CACZC,SAAS,EACTM,UAAW,UACXD,SAAU,2BAGdxD,EAAMsE,mB,+BAwCE,IAAD,OACC3G,EAAYqG,KAAKtG,MAAjBC,QACR,OACE,6BACE,kBAACiH,EAAA,EAAD,MACA,kBAACsB,EAAA,EAAD,CAAQrH,MAAM,UAAUhB,UAAWF,EAAQ+D,QACzC,kBAACyE,EAAA,EAAD,KACE,yBAAKtI,UAAU,sBACb,kBAACiH,EAAA,EAAD,CAAY9G,QAAQ,KAAKoI,QAAM,GAA/B,sBACA,kBAACZ,EAAA,EAAD,CAAQ3H,UAAWF,EAAQkF,WAAY/D,QAASkF,KAAK+C,YAArD,QACA,kBAACvB,EAAA,EAAD,CAAQ3H,UAAWF,EAAQkF,WAAY/D,QAASkF,KAAK8B,sBAArD,8BAGA,yBAAKjI,UAAU,yBACb,6BAAMmG,KAAKZ,MAAMC,UACjB,uBAAGsB,MAAO,CAAEnF,SAAU,GAAIX,MAAO,UAAW,8CAAegJ,WAAW7D,KAAKZ,MAAMgE,iBAKzF,0BAAMvJ,UAAWF,EAAQiE,QACvB,kBAACoG,GAAA,EAAD,CAAOnK,UAAWF,EAAQ4E,QACxB,kBAACuC,EAAA,EAAD,CAAYL,UAAU,KAAKzG,QAAQ,KAAKiK,MAAM,UAA9C,6BAGA,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACxI,QAAS,GACvB,kBAACuI,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CAAa7D,UAAU,WAAW5G,UAAWF,EAAQ4K,aACnD,kBAACC,GAAA,EAAD,CAAW/D,UAAU,UAArB,sBACA,kBAACgE,GAAA,EAAD,CAAY7J,aAAW,cACrBmF,KAAK,gBACLD,MAAOE,KAAKZ,MAAM+D,cAClB5B,SAAUvB,KAAKyC,eACf9B,MAAO,CAAE+D,KAAM,UAAWvH,cAAe,QACzC,kBAACwH,GAAA,EAAD,CAAkB7E,MAAM,UAAU8E,QAAS,kBAACC,GAAA,EAAD,CAAOhK,MAAM,YAAcwG,MAAM,UAC5E,kBAACsD,GAAA,EAAD,CAAkB7E,MAAM,SAAS8E,QAAS,kBAACC,GAAA,EAAD,CAAOhK,MAAM,YAAcwG,MAAM,aAG/E,kBAACH,EAAA,EAAD,CACEC,UAAQ,EACR7G,GAAG,SACHyF,KAAK,SACLsB,MAAM,eACND,WAAS,EACT5E,KAAK,SAEL8E,aAAa,eACbxB,MAAOE,KAAKZ,MAAMuD,OAClBpB,SAAUvB,KAAKyC,kBAGnB,kBAACyB,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACnD,EAAA,EAAD,CACEC,UAAQ,EACR7G,GAAG,eACHyF,KAAK,cACLsB,MAAM,iCACN7E,KAAK,OACL4E,WAAS,EACTE,aAAa,kCACbxB,MAAOE,KAAKZ,MAAMwD,YAClBrB,SAAUvB,KAAKyC,kBAGnB,kBAACyB,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,KAAD,CAAyBS,MAAOC,MAC9B,kBAAC,KAAD,CACEC,MAAM,OACN1K,GAAG,qBACH+G,MAAM,cACN4D,OAAO,aACPnF,MAAOE,KAAKZ,MAAMyD,KAClBtB,SAAUvB,KAAKuD,WACf2B,oBAAqB,CACnB,aAAc,oBAMxB,yBAAKvE,MAAO,CAAE+D,KAAM,UAAWvH,cAAe,MAAO0D,UAAW,WAE9D,kBAACW,EAAA,EAAD,CACEhF,KAAK,SACL4E,WAAS,EACTpH,QAAQ,YACRa,MAAM,UACNhB,UAAWF,EAAQ8E,QACnB3D,QAASkF,KAAKiB,cANhB,UAUA,kBAACO,EAAA,EAAD,CACEhF,KAAK,SACL4E,WAAS,EACTpH,QAAQ,OACRa,MAAM,UACNhB,UAAWF,EAAQ8E,QACnB3D,QAASkF,KAAK8C,gBANhB,cAaJ,kBAAChH,EAAD,CACEU,KAAMwD,KAAKZ,MAAMK,UACjBnD,KAAM0D,KAAKZ,MAAMD,QACjBrF,QAASkG,KAAKZ,MAAMI,SACpBzF,QAAS,kBAAM,EAAKkF,sB,GAhTCwC,aAwTlBC,eAAW7E,EAAX6E,CAAmBc,I,kDC7T5B2C,G,YAEF,WAAYzL,GAAQ,IAAD,8BACf,4CAAMA,KAsBV0L,YAAc,WAEV,IADA,IACA,MADmB,CAAC,OAAQ,cAAe,eAAgB,eAC3D,eAA8B,CAAzB,IAAIzK,EAAG,KACRsF,aAAa+B,WAAWrH,GAE5B0K,MAAM,oBACN,EAAKnG,SAAS,CACVoG,MAAO,KA9BI,EAkCnBC,qBAAuB,WACnB,EAAK7L,MAAMyG,QAAQC,KAAK,CACpBC,SAAU,0BApCC,EAwCnB0C,WAAa,WACT,EAAKrJ,MAAMyG,QAAQC,KAAK,CACtBC,SAAS,UAxCX,EAAKjB,MAAQ,CACTkG,MAAO,EACPnG,SAAS,EACTK,SAAU,GACVC,UAAW,GACXnD,MAAM,GAPK,E,iFAYX2D,aAAaM,QAAQ,aACrBP,KAAKtG,MAAMyG,QAAQC,KAAK,CACpBC,SAAU,MAIlBJ,aAAaM,QAAQ,SAAWP,KAAKd,SAAS,CAC1CoG,MAAO9B,KAAKC,MAAMxD,aAAaM,QAAQ,a,+BA2BrC,IACE5G,EAAYqG,KAAKtG,MAAjBC,QAER,OACI,6BACI,kBAACiH,EAAA,EAAD,MACA,kBAACsB,EAAA,EAAD,CAAQrH,MAAM,UAAUhB,UAAWF,EAAQ+D,QACvC,kBAACyE,EAAA,EAAD,KACI,yBAAKtI,UAAU,sBACX,kBAACiH,EAAA,EAAD,CAAY9G,QAAQ,KAAKoI,QAAM,GAA/B,YACA,kBAACZ,EAAA,EAAD,CAAQ3H,UAAWF,EAAQkF,WAAY/D,QAASkF,KAAK+C,YAArD,oBAOZ,0BAAMlJ,UAAWF,EAAQ+E,gBACrB,kBAACsF,GAAA,EAAD,CAAOnK,UAAWF,EAAQ4E,QACtB,kBAACuC,EAAA,EAAD,CAAYL,UAAU,KAAKzG,QAAQ,KAAKiK,MAAM,UAC1C,uCAEkB,IAArBjE,KAAKZ,MAAMkG,MACR,6BACI,kBAACE,GAAA,EAAD,CAAO3L,UAAWF,EAAQmF,OACtB,kBAAC2G,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAD,CAAiB1B,MAAM,UAAvB,QACA,kBAAC0B,GAAD,CAAiB1B,MAAM,UAAvB,eACA,kBAAC0B,GAAD,CAAiB1B,MAAM,UAAvB,UACA,kBAAC0B,GAAD,CAAiB1B,MAAM,UAAvB,WACA,kBAAC0B,GAAD,CAAiB1B,MAAM,UAAvB,YAGR,kBAAC2B,GAAA,EAAD,KACK5F,KAAKZ,MAAMkG,MAAMO,KAAI,SAACzB,EAAM0B,GAAP,OAClB,kBAACC,GAAD,CAAgBpL,IAAKmL,GACjB,kBAACH,GAAD,CAAiB1B,MAAM,UAAUG,EAAKvB,MACtC,kBAAC8C,GAAD,CAAiB1B,MAAM,UAAUG,EAAKxB,aACtC,kBAAC+C,GAAD,CAAiB1B,MAAM,UAAUG,EAAKnB,QACtC,kBAAC0C,GAAD,CAAiB1B,MAAM,UAAUG,EAAKlB,SACtC,kBAACyC,GAAD,CAAiB1B,MAAM,UAAUG,EAAKzB,cAKtD,yBAAKhC,MAAO,CAAE+D,KAAM,UAAWvH,cAAe,MAAO0D,UAAW,WAC5D,kBAACW,EAAA,EAAD,CACIhF,KAAK,SACL4E,WAAS,EACTpH,QAAQ,OACRa,MAAM,UACNhB,UAAWF,EAAQgF,eACnB7D,QAASkF,KAAKoF,aANlB,SAUA,kBAAC5D,EAAA,EAAD,CACIhF,KAAK,SACL4E,WAAS,EACTpH,QAAQ,YACRa,MAAM,UACNhB,UAAWF,EAAQgF,eACnB7D,QAASkF,KAAKuF,sBANlB,qBAcJ,yBAAK5E,MAAO,CAAEE,UAAW,WACrB,sFACA,kBAACW,EAAA,EAAD,CACIhF,KAAK,SACL4E,WAAS,EACTpH,QAAQ,YACRa,MAAM,UACNhB,UAAWF,EAAQgF,eACnB7D,QAASkF,KAAKuF,sBANlB,2B,GAzHT9D,aAgJrBkE,GAAkBjE,aAAW,SAAA1G,GAAK,MAAK,CACzCgL,KAAM,CACF/K,gBAAiB,UACjBJ,MAAOG,EAAMG,QAAQ8K,OAAOC,MAC5B1K,SAAU,IAEdsB,KAAM,CACFtB,SAAU,OAPMkG,CASpByE,MAEEJ,GAAiBrE,aAAW,SAAA1G,GAAK,MAAK,CACxC+B,KAAM,CACF,qBAAsB,CAClB9B,gBAAiB,eAHNyG,CAMnBgE,MAEWhE,eAAW7E,EAAX6E,CAAmByD,I,oBCnK5BiB,G,YAEF,WAAY1M,GAAQ,IAAD,8BACf,4CAAMA,KAuCVqJ,WAAa,WACT,EAAKrJ,MAAMyG,QAAQC,KAAK,CACpBC,SAAU,UA1CC,EA8CnBwB,eAAiB,WACb,EAAKnI,MAAMyG,QAAQC,KAAK,CACpBC,SAAU,eAhDC,EAoDnBuB,kBAAoB,WAChB,EAAKlI,MAAMyG,QAAQC,KAAK,CACpBC,SAAU,0BApDd,EAAKjB,MAAQ,CACTiE,YAAa,GACbC,aAAc,GACd+C,UAAW,GACXC,WAAY,IAND,E,iFAYVrG,aAAaM,QAAQ,aACtBP,KAAKtG,MAAMyG,QAAQC,KAAK,CACpBC,SAAU,MAIlB,IAAIkG,EAAY,EACZC,EAAa,EACjB,GAA4C,OAAxCvG,aAAaM,QAAQ,eAAyB,CAC9C,IAAIkG,EAAOjD,KAAKC,MAAMxD,aAAaM,QAAQ,gBAC3C,IAAK,IAAImG,KAAKD,EACVF,GAAwB1C,WAAW4C,EAAKC,IAMhD,GAHA1G,KAAKd,SAAS,CACVmH,UAAWE,IAE8B,OAAzCtG,aAAaM,QAAQ,gBAA0B,CAC/C,IAAIoG,EAAOnD,KAAKC,MAAMxD,aAAaM,QAAQ,iBAC3C,IAAK,IAAIqG,KAAKD,EACVH,GAA0B3C,WAAW8C,EAAKC,IAGlD5G,KAAKd,SAAS,CACVoH,WAAYE,M,+BAuBV,IACE7M,EAAYqG,KAAKtG,MAAjBC,QACR,OACI,6BACI,kBAACiH,EAAA,EAAD,MACA,kBAACsB,EAAA,EAAD,CAAQvE,SAAS,WAAW9C,MAAM,UAAUhB,UAAWF,EAAQ+D,QAC3D,kBAACyE,EAAA,EAAD,KACI,yBAAKtI,UAAU,sBACX,kBAACiH,EAAA,EAAD,CAAY9G,QAAQ,KAAKoI,QAAM,GAA/B,kBACA,kBAACZ,EAAA,EAAD,CAAQ3H,UAAWF,EAAQkF,WAAY/D,QAASkF,KAAK+C,YAArD,QACI,kBAACvB,EAAA,EAAD,CAAQ3H,UAAWF,EAAQkF,WAAY/D,QAASkF,KAAK4B,mBAArD,mBACA,kBAACJ,EAAA,EAAD,CAAQ3H,UAAWF,EAAQkF,WAAY/D,QAASkF,KAAK6B,gBAArD,gBAKhB,0BAAMhI,UAAWF,EAAQqE,iBAAkB2C,MAAO,CAAE/E,QAAS,OAAQiL,eAAgB,WAKjF,kBAAC7C,GAAA,EAAD,CAAOnK,UAAWF,EAAQsE,kBACtB,kBAAC6C,EAAA,EAAD,CAAYL,UAAU,KAAKzG,QAAQ,KAAKiK,MAAM,UAC1C,iEAIJ,yBAAKtD,MAAO,CAAE/E,QAAS,OAAQuB,cAAe,MAAO0J,eAAgB,WACjE,kBAACC,GAAA,EAAD,CAAMjN,UAAWF,EAAQyE,MACrB,kBAAC2I,GAAA,EAAD,KACI,kBAACjG,EAAA,EAAD,CAAYjH,UAAWF,EAAQ2E,MAAOzD,MAAM,gBAAgBmM,cAAY,GAAxE,gBAGA,kBAAClG,EAAA,EAAD,CAAY9G,QAAQ,KAAKyG,UAAU,MAAnC,OACST,KAAKZ,MAAMiH,aAI5B,kBAACS,GAAA,EAAD,CAAMjN,UAAWF,EAAQyE,MACrB,kBAAC2I,GAAA,EAAD,KACI,kBAACjG,EAAA,EAAD,CAAYjH,UAAWF,EAAQ2E,MAAOzD,MAAM,gBAAgBmM,cAAY,GAAxE,iBAGA,kBAAClG,EAAA,EAAD,CAAY9G,QAAQ,KAAKyG,UAAU,MAAnC,OACST,KAAKZ,MAAMkH,sB,GAzGtB7E,aAqHnBC,eAAW7E,EAAX6E,CAAmB0E,ICpGnBa,OAhBf,WACE,OACE,kBAAC,IAAD,CAAeC,SAAS,uBACtB,yBAAKrN,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsN,KAAK,IAAIC,OAAK,EAAC3G,UAAWzB,IACjC,kBAAC,IAAD,CAAOmI,KAAK,QAAQ1G,UAAWkB,KAC/B,kBAAC,IAAD,CAAOwF,KAAK,uBAAuB1G,UAAW+B,KAC9C,kBAAC,IAAD,CAAO2E,KAAK,YAAY1G,UAAW0E,KACnC,kBAAC,IAAD,CAAOgC,KAAK,mBAAmB1G,UAAW2F,SCNhCiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b4e6c0d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\n\r\nexport default function SnackBarWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nSnackBarWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n \r\n};\r\n\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n      backgroundColor: green[600],\r\n    },\r\n    error: {\r\n      backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n      backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n      fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n      opacity: 0.9,\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n  }));\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackBarWrapper from './SnackBarWrapper'\r\n\r\n\r\nexport default function SnackBar(props) {\r\n\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        props.onClose(false)\r\n    }\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n            }}\r\n            open={props.open}\r\n            autoHideDuration={3000}\r\n            onClose={handleClose}\r\n        >\r\n            <SnackBarWrapper\r\n                onClose={handleClose}\r\n                variant={props.type}\r\n                message={props.message}\r\n            />\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nSnackBar.prototypes = {\r\n    type: PropTypes.string,\r\n    open: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose:PropTypes.func\r\n}\r\n","\r\n\r\nconst styles = (theme) => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: '#50d07d'\r\n        },\r\n    },\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(16),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        width: '80%'\r\n    },\r\n    login: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    close: {\r\n        padding: theme.spacing(0.5),\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n        width: \"100%\"\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    thismonth_layout:{\r\n        width:'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    thismonth_papers:{\r\n        width: '50%',\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.down(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n            width:'100%'\r\n        },\r\n    },\r\n    card: {\r\n        width:'50%',\r\n        marginRight: '5px',\r\n        marginTop: '10px',\r\n        overflowX:'auto'\r\n       \r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    papers: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n        overflowX: 'auto',\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    submits: {\r\n        margin: theme.spacing(2, 1, 1),\r\n        width: \"40%\",\r\n    },\r\n   \r\n    passbooklayout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: '100%',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    passbooksubmit: {\r\n        margin: theme.spacing(3, 2, 2),\r\n        width: 'auto'\r\n    },\r\n    \r\n   \r\n    icon_style: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    textbutton: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n\r\n});\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport { Button, CssBaseline, TextField, Typography, Container } from '@material-ui/core';\r\nimport SnackBar from './SnackBar';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from './styles';\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      msgOpen: false,\r\n      snackMsg: \"\",\r\n      snackType: \"\"\r\n    }\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleInputData = this.handleInputData.bind(this);\r\n  }\r\n\r\n  // setting the values of when user enters the details\r\n  handleInputData(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n\r\n  //login button\r\n  handleLogin(event) {\r\n    if (this.state.username === \"person123\" && this.state.password === \"12345678\") {\r\n      localStorage.setItem('loggedIn', true);\r\n      this.props.history.push({\r\n        pathname: \"/home\",\r\n      })\r\n    } else if (this.state.username === '') {\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'error',\r\n        snackMsg: 'Please Enter Username!'\r\n      })\r\n    } else if (this.state.password === '') {\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'error',\r\n        snackMsg: 'Please Enter Password!'\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'error',\r\n        snackMsg: 'Wrong Credentials! Please check your username/password!'\r\n      })\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  //handling close button of snackbar, resetting its initital state to false\r\n  snackClose = () => {\r\n    this.setState({\r\n      msgOpen: false\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem('loggedIn')) {\r\n      this.props.history.push({\r\n        pathname: \"/home\",\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\" style={{ backgroundColor: 'white' }}>\r\n          <CssBaseline />\r\n          <div className={classes.paper} >\r\n            <p style={{ textAlign: 'center'}}>\r\n              <b>Welcome to Personal Finance Manager</b>\r\n            </p>\r\n            <Typography component=\"h1\" variant=\"h5\" style={{ paddingTop: 10 }}>\r\n              Sign in\r\n          </Typography>\r\n            <form className={classes.form} onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Enter Your Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.handleInputData}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Enter Your Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={this.state.password}\r\n                onChange={this.handleInputData}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.login}\r\n                onClick={this.handleLogin}\r\n              >\r\n                Log In\r\n            </Button>\r\n            </form>\r\n          </div>\r\n          <SnackBar\r\n            type={this.state.snackType}\r\n            open={this.state.msgOpen}\r\n            message={this.state.snackMsg}\r\n            onClose={() => this.snackClose()}\r\n          />\r\n        </Container>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Login);\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {Button,CssBaseline,Typography,Container,AppBar,Toolbar} from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from './styles';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    componentDidMount(){\r\n        if(!localStorage.getItem('loggedIn')){\r\n            this.props.history.push({\r\n                pathname: \"/\",\r\n            })\r\n        }\r\n    }\r\n\r\n    handleTransaction = () => {\r\n        this.props.history.push({\r\n            pathname: \"/transaction_details\",\r\n        })\r\n    }\r\n\r\n    handlePassbook = () => {\r\n        this.props.history.push({\r\n            pathname: \"/passbook\",\r\n        })\r\n    }\r\n\r\n    handleMonthlyDetails = () => {\r\n        this.props.history.push({\r\n            pathname: \"/monthly_details\",\r\n        })\r\n    }\r\n\r\n    handleLogout = () => {\r\n        localStorage.removeItem('loggedIn');\r\n       this.props.history.push({\r\n           pathname:\"/\"\r\n       })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <div className='titlebar-container'>\r\n                            <Typography variant=\"h6\" noWrap>Home</Typography>\r\n                            <Button className={classes.textbutton} onClick={this.handleLogout}>Logout</Button>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Container component=\"main\" maxWidth=\"xs\" style={{ backgroundColor: '#50d07d' }}>\r\n                    <div className={classes.paper}>\r\n                        <Typography component=\"h1\" variant=\"h5\" style={{ paddingTop: 10,color:'white',fontSize:22 }}>\r\n                            <b>Finance Manager</b>\r\n                        </Typography>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handleTransaction}\r\n                        >\r\n                        <PaymentIcon className={classes.icon_style} />\r\n                            ADD TRANSACTION\r\n                        </Button>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handlePassbook}\r\n                        >\r\n                        <AccountBalanceWalletIcon className={classes.icon_style} />\r\n                            VIEW PASSBOOK\r\n                        </Button>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handleMonthlyDetails}\r\n                        >\r\n                        <TimelineIcon className={classes.icon_style}/>\r\n                            CURRENT MONTH DETAILS\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Home);","import React, { Component } from 'react';\r\nimport { Button, CssBaseline, Typography, AppBar, Toolbar, Paper, Grid, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport 'date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport './style/listcell.css'\r\nimport styles from './styles';\r\nimport SnackBar from './SnackBar';\r\n\r\nvar dt = new Date();\r\nvar currentMonth = dt.getMonth() + 1;\r\n\r\nclass TransactionDetails extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      arr: [],\r\n      income: '',\r\n      expense: '',\r\n      amount: '',\r\n      description: '',\r\n      date: new Date(),\r\n      selectedValue: 'income',\r\n      netAmount: 0,\r\n      totalIncome: [],\r\n      totalExpense: [],\r\n      msgOpen: false,\r\n      snackMsg: \"\",\r\n      snackType: \"\"\r\n    }\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n    this.handleDate = this.handleDate.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!localStorage.getItem('loggedIn')) {\r\n      this.props.history.push({\r\n        pathname: \"/\",\r\n      })\r\n    }\r\n\r\n    localStorage.getItem('totalAmount') && this.setState({\r\n      netAmount: JSON.parse(localStorage.getItem('totalAmount')),\r\n    })\r\n\r\n    localStorage.getItem('data') && this.setState({\r\n      arr: JSON.parse(localStorage.getItem('data')),\r\n    })\r\n\r\n    localStorage.getItem('totalIncome') && this.setState({\r\n      totalIncome: JSON.parse(localStorage.getItem('totalIncome')),\r\n    })\r\n\r\n    localStorage.getItem('totalExpense') && this.setState({\r\n      totalExpense: JSON.parse(localStorage.getItem('totalExpense')),\r\n    })\r\n  }\r\n\r\n  ///////// handling the input details //////////\r\n\r\n  handleOnChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n    event.preventDefault();\r\n  }\r\n\r\n  ///////// handling date //////////\r\n  handleDate(date) {\r\n    this.setState({\r\n      date: date,\r\n    })\r\n  }\r\n\r\n  ///////// handling the form submission //////////\r\n  handleSubmit(event) {\r\n\r\n    if (this.state.amount === '') {\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'error',\r\n        snackMsg: 'Please Enter Amount!'\r\n      })\r\n    } else if (this.state.description === '') {\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'error',\r\n        snackMsg: 'Please Enter the description of the transaction!'\r\n      })\r\n    }\r\n    else {\r\n      var obj = {};\r\n      var amt;\r\n      var month;\r\n      month = this.state.date.getMonth() + 1;\r\n\r\n      if (this.state.selectedValue === 'expense') {\r\n        amt = parseFloat(this.state.netAmount) - parseFloat(this.state.amount);\r\n        if (this.state.netAmount === 0 || amt < 0) {\r\n          this.setState({\r\n            msgOpen: true,\r\n            snackType: 'error',\r\n            snackMsg: 'Amount balance is low!'\r\n          })\r\n          return;\r\n        }\r\n        else {\r\n          obj = {\r\n            'income': '',\r\n            'expense': this.state.amount,\r\n            'description': this.state.description,\r\n            'date': (this.state.date).toLocaleDateString(),\r\n            'amount': amt,\r\n          }\r\n          this.setState({\r\n            netAmount: amt\r\n          })\r\n          localStorage.setItem('totalAmount', amt)\r\n        }\r\n      } else {\r\n        amt = parseFloat(this.state.netAmount) + parseFloat(this.state.amount);\r\n        obj = {\r\n          'income': this.state.amount,\r\n          'expense': '',\r\n          'description': this.state.description,\r\n          'date': (this.state.date).toLocaleDateString(),\r\n          'amount': amt,\r\n        }\r\n        this.setState({\r\n          netAmount: amt\r\n        })\r\n        localStorage.setItem('totalAmount', amt);\r\n      }\r\n\r\n      this.state.arr.push(obj);\r\n\r\n      let data = 'data';\r\n      localStorage.setItem(data, JSON.stringify(this.state.arr));\r\n\r\n      if (this.state.selectedValue === 'expense' && month === currentMonth) {\r\n        this.state.totalExpense.push(this.state.amount);\r\n        localStorage.setItem('totalExpense', JSON.stringify(this.state.totalExpense))\r\n      }\r\n      else if (this.state.selectedValue === 'income' && month === currentMonth) {\r\n        this.state.totalIncome.push(this.state.amount);\r\n        localStorage.setItem('totalIncome', JSON.stringify(this.state.totalIncome))\r\n      }\r\n\r\n      this.resetForm();\r\n\r\n      this.setState({\r\n        msgOpen: true,\r\n        snackType: 'success',\r\n        snackMsg: 'Successfully recorded!'\r\n      })\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  //////handling snakbar's close button///////\r\n  snackClose = () => {\r\n    this.setState({\r\n      msgOpen: false\r\n    })\r\n  }\r\n\r\n  /////////// resetting the form data after succesfull form submission/////////\r\n  resetForm = () => {\r\n    this.setState({\r\n      amount: '',\r\n      description: '',\r\n      date: new Date()\r\n    })\r\n  }\r\n\r\n\r\n  //////// navigation to Passbook page /////////\r\n  handlepassbook = () => {\r\n    this.props.history.push({\r\n      pathname: \"/passbook\",\r\n    })\r\n  }\r\n\r\n  handleMonthlyDetails = () => {\r\n    this.props.history.push({\r\n      pathname: \"/monthly_details\",\r\n    })\r\n  }\r\n\r\n  handleHome = () => {\r\n    this.props.history.push({\r\n      pathname:'home'\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <CssBaseline />\r\n        <AppBar color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <div className='titlebar-container'>\r\n              <Typography variant=\"h6\" noWrap>Transaction Details \r\n              <Button className={classes.textbutton} onClick={this.handleHome}>Home</Button>\r\n              <Button className={classes.textbutton} onClick={this.handleMonthlyDetails}>Current Month Transaction</Button>\r\n              </Typography>\r\n\r\n              <div className='titlebar-user-details'>\r\n                <div>{this.state.username}</div>\r\n                <p style={{ fontSize: 16, color: 'green' }}><b>Amount : ₹ {parseFloat(this.state.netAmount)}</b></p>\r\n              </div>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.papers}>\r\n            <Typography component=\"h1\" variant=\"h6\" align=\"center\">\r\n              Enter Transaction Details\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                  <FormLabel component=\"legend\">Choose Transaction</FormLabel>\r\n                  <RadioGroup aria-label=\"transaction\"\r\n                    name=\"selectedValue\"\r\n                    value={this.state.selectedValue}\r\n                    onChange={this.handleOnChange}\r\n                    style={{ flex: 'display', flexDirection: 'row' }}>\r\n                    <FormControlLabel value=\"expense\" control={<Radio color=\"primary\" />} label=\"Debit\" />\r\n                    <FormControlLabel value=\"income\" control={<Radio color=\"primary\" />} label=\"Credit\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                <TextField\r\n                  required\r\n                  id=\"income\"\r\n                  name=\"amount\"\r\n                  label=\"Enter Amount\"\r\n                  fullWidth\r\n                  type='number'\r\n                  //placeholder = 'Enter Amount'\r\n                  autoComplete=\"Enter Amount\"\r\n                  value={this.state.amount}\r\n                  onChange={this.handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  id=\"descriptions\"\r\n                  name=\"description\"\r\n                  label=\"Description of the transaction\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  autoComplete=\"Enter Transaction's Description\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    naame=\"date\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Choose Date\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={this.state.date}\r\n                    onChange={this.handleDate}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n            </Grid>\r\n            <div style={{ flex: 'display', flexDirection: 'row', textAlign: 'center' }}>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submits}\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                className={classes.submits}\r\n                onClick={this.handlepassbook}\r\n              >\r\n                Passbook\r\n              </Button>\r\n\r\n            </div>\r\n          </Paper>\r\n          <SnackBar\r\n            type={this.state.snackType}\r\n            open={this.state.msgOpen}\r\n            message={this.state.snackMsg}\r\n            onClose={() => this.snackClose()}\r\n          />\r\n        </main>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TransactionDetails);\r\n","import React, { Component } from 'react';\r\nimport { CssBaseline, AppBar, Toolbar, Paper, Typography, Button, Table, TableBody, TableCell, TableHead, TableRow, } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport 'date-fns';\r\nimport styles from './styles';\r\n\r\n\r\n\r\nclass ViewPassBook extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            datas: 0,\r\n            msgOpen: false,\r\n            snackMsg: \"\",\r\n            snackType: \"\",\r\n            open: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n\r\n        if(!localStorage.getItem('loggedIn')){\r\n            this.props.history.push({\r\n                pathname: \"/\",\r\n            })\r\n        }\r\n        \r\n        localStorage.getItem('data') && this.setState({\r\n            datas: JSON.parse(localStorage.getItem('data')),\r\n        })\r\n    }\r\n\r\n    handleClear = () => {\r\n        let keysToRemove = [\"data\", \"totalIncome\", \"totalExpense\", \"totalAmount\"];\r\n        for (var key of keysToRemove) {\r\n            localStorage.removeItem(key);\r\n        }\r\n        alert(\"Records Cleared!\");\r\n        this.setState({\r\n            datas: 0\r\n        })\r\n    }\r\n\r\n    handleAddTransaction = () => {\r\n        this.props.history.push({\r\n            pathname: \"/transaction_details\",\r\n        })\r\n    }\r\n\r\n    handleHome = () => {\r\n        this.props.history.push({\r\n          pathname:'home'\r\n        })\r\n      }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <CssBaseline />\r\n                <AppBar color=\"default\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <div className='titlebar-container'>\r\n                            <Typography variant=\"h6\" noWrap> Passbook \r\n                            <Button className={classes.textbutton} onClick={this.handleHome}>Back To Home</Button>\r\n                            </Typography>\r\n                            \r\n\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <main className={classes.passbooklayout}>\r\n                    <Paper className={classes.papers}>\r\n                        <Typography component=\"h1\" variant=\"h4\" align=\"center\" >\r\n                            <b>Records</b>\r\n                        </Typography>\r\n                        {this.state.datas !== 0 ? (\r\n                            <div>\r\n                                <Table className={classes.table}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <StyledTableCell align=\"center\">Date</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Description</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Income</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Expense</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">Amount</StyledTableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.datas.map((item, index) => (\r\n                                            <StyledTableRow key={index}>\r\n                                                <StyledTableCell align=\"center\">{item.date}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.description}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.income}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.expense}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{item.amount}</StyledTableCell>\r\n                                            </StyledTableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                                <div style={{ flex: 'display', flexDirection: 'row', textAlign: 'center' }}>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"text\"\r\n                                        color=\"primary\"\r\n                                        className={classes.passbooksubmit}\r\n                                        onClick={this.handleClear}\r\n                                    >\r\n                                        Clear\r\n                                    </Button>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.passbooksubmit}\r\n                                        onClick={this.handleAddTransaction}\r\n                                    >\r\n                                        Add Transaction\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ) : (\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <h1>Record is Empty! Please add some transactions details!</h1>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.passbooksubmit}\r\n                                        onClick={this.handleAddTransaction}\r\n                                    >\r\n                                        Add Transaction\r\n                                    </Button>\r\n\r\n                                </div>\r\n                            )}\r\n                    </Paper>\r\n\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n        backgroundColor: '#50d07d',\r\n        color: theme.palette.common.white,\r\n        fontSize: 15\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: '#ADD8E6',\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nexport default withStyles(styles)(ViewPassBook);\r\n","import React, { Component } from 'react';\r\nimport { CssBaseline, AppBar, Toolbar, Paper, Typography, Card, CardContent, Button } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport 'date-fns';\r\nimport './style/listcell.css'\r\nimport styles from './styles';\r\n\r\n\r\nclass CurrentMonthDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalIncome: [],\r\n            totalExpense: [],\r\n            netIncome: '',\r\n            netExpense: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (!localStorage.getItem('loggedIn')) {\r\n            this.props.history.push({\r\n                pathname: \"/\",\r\n            })\r\n        }\r\n\r\n        var netincome = 0;\r\n        var netexpense = 0;\r\n        if (localStorage.getItem('totalIncome') !== null) {\r\n            var arr1 = JSON.parse(localStorage.getItem('totalIncome'))\r\n            for (var i in arr1) {\r\n                netincome = netincome + parseFloat(arr1[i])\r\n            }\r\n        }\r\n        this.setState({\r\n            netIncome: netincome\r\n        })\r\n        if (localStorage.getItem('totalExpense') !== null) {\r\n            var arr2 = JSON.parse(localStorage.getItem('totalExpense'))\r\n            for (var j in arr2) {\r\n                netexpense = netexpense + parseFloat(arr2[j])\r\n            }\r\n        }\r\n        this.setState({\r\n            netExpense: netexpense\r\n        })\r\n    }\r\n\r\n    handleHome = () => {\r\n        this.props.history.push({\r\n            pathname: 'home'\r\n        })\r\n    }\r\n\r\n    handlePassbook = () => {\r\n        this.props.history.push({\r\n            pathname: \"/passbook\",\r\n        })\r\n    }\r\n\r\n    handleTransaction = () => {\r\n        this.props.history.push({\r\n            pathname: \"/transaction_details\",\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <div className='titlebar-container'>\r\n                            <Typography variant=\"h6\" noWrap>Monthly Details\r\n                            <Button className={classes.textbutton} onClick={this.handleHome}>Home</Button>\r\n                                <Button className={classes.textbutton} onClick={this.handleTransaction}>Add Transaction</Button>\r\n                                <Button className={classes.textbutton} onClick={this.handlePassbook}>Passbook</Button>\r\n                            </Typography>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <main className={classes.thismonth_layout} style={{ display: 'flex', justifyContent: 'center' }}>\r\n\r\n\r\n\r\n\r\n                    <Paper className={classes.thismonth_papers}>\r\n                        <Typography component=\"h1\" variant=\"h6\" align=\"center\">\r\n                            <b>Transaction Details of this Month</b>\r\n                        </Typography>\r\n\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Total Income\r\n                                </Typography>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        Rs. {this.state.netIncome}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Total Expense\r\n                                </Typography>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        Rs. {this.state.netExpense}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n                    </Paper>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CurrentMonthDetails);\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from './components/Login'\nimport Home from './components/Home';\nimport TransactionDetails from './components/TransactionDetails';\nimport ViewPassBook from './components/ViewPassBook';\nimport CurrentMonthDetails from './components/CurrentMonthDetails'\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/my-finance-manager\">\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/transaction_details\" component={TransactionDetails} />\n          <Route path=\"/passbook\" component={ViewPassBook} />\n          <Route path=\"/monthly_details\" component={CurrentMonthDetails} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}